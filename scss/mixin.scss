@use 'varibles' as *;
@use "sass:math";
// 1200px
@mixin xl-down {
    @media (max-width: $breakpoint-xl) {
        .page__container {
            width: 95%;
            max-width: 100%;
          } 
      @content;
    }
}
// 992px
@mixin lg-down {
    @media (max-width: $breakpoint-lg) {
      @content;
    }
}
// 768
@mixin md-down {
    @media (max-width: $breakpoint-md) {
      @content;
    }
}
// 576
@mixin sm-down {
    @media (max-width: $breakpoint-sm) {
      @content;
    }
}
// 440px
@mixin xs-down {
    @media (max-width: $breakpoint-xs) {
        .location-tag {
            font-size: 10px;
            padding: 3px 6px;
          }
      @content;
    }
}
// 375px
@mixin xxs-down {
    @media (max-width: $breakpoint-xxs) {
        .divider {
            margin: 15px;
          }
        @content;
    }
}

@function strip-unit($value) {
    @return math.div($value, ($value * 0 + 1));
}

@mixin fluid-type($min-vw, $max-vw, $min-font-size, $max-font-size) {
  font-size: $min-font-size;

  @media screen and (min-width: $min-vw) {
    font-size: calc(#{$min-font-size} + #{strip-unit($max-font-size - $min-font-size)} * ((100vw - #{$min-vw}) / #{strip-unit($max-vw - $min-vw)}));
  }

  @media screen and (min-width: $max-vw) {
    font-size: $max-font-size;
  }
}

@mixin flex-container($direction: row, $justify: flex-start, $align: stretch, $wrap: nowrap) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
  flex-wrap: $wrap;
}

@mixin flex-item($grow: 0, $shrink: 1, $basis: auto) {
  flex-grow: $grow;
  flex-shrink: $shrink;
  flex-basis: $basis;
}

@mixin grid($columns, $rows: auto, $gap: 20px) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  grid-template-rows: repeat($rows, 1fr);
  gap: $gap;
}

@mixin button-header($background-color, $color, $margin-right) {
    background-color: $background-color;
    color: $color;
    margin-right: $margin-right;
}